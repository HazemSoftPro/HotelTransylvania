@baseUrl = http://localhost:5000/api
@token = YOUR_JWT_TOKEN_HERE

### Login to get token
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "admin@innhotel.com",
  "password": "Admin@123"
}

### List all Services (with pagination)
GET {{baseUrl}}/services?pageNumber=1&pageSize=10
Authorization: Bearer {{token}}

### Get Service by ID
GET {{baseUrl}}/services/1
Authorization: Bearer {{token}}

### Create a new Service
POST {{baseUrl}}/services
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "branchId": 1,
  "name": "Spa Treatment",
  "price": 75.00,
  "description": "Relaxing spa treatments including massage, facial, and aromatherapy"
}

### Create another Service
POST {{baseUrl}}/services
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "branchId": 1,
  "name": "Room Service",
  "price": 25.00,
  "description": "24/7 in-room dining service"
}

### Create Laundry Service
POST {{baseUrl}}/services
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "branchId": 1,
  "name": "Laundry Service",
  "price": 15.00,
  "description": "Professional laundry and dry cleaning service"
}

### Create Airport Transfer Service
POST {{baseUrl}}/services
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "branchId": 1,
  "name": "Airport Transfer",
  "price": 50.00,
  "description": "Comfortable airport pickup and drop-off service"
}

### Update Service
PUT {{baseUrl}}/services/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "branchId": 1,
  "name": "Premium Spa Treatment",
  "price": 95.00,
  "description": "Updated: Luxury spa experience with premium treatments"
}

### Delete Service
DELETE {{baseUrl}}/services/1
Authorization: Bearer {{token}}

### Pagination Tests

### Get first page
GET {{baseUrl}}/services?pageNumber=1&pageSize=2
Authorization: Bearer {{token}}

### Get second page
GET {{baseUrl}}/services?pageNumber=2&pageSize=2
Authorization: Bearer {{token}}

### Get all services (large page size)
GET {{baseUrl}}/services?pageNumber=1&pageSize=100
Authorization: Bearer {{token}}

### Error Cases

### Create Service with invalid data (missing required fields)
POST {{baseUrl}}/services
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "branchId": 1
}

### Create Service with invalid price (negative)
POST {{baseUrl}}/services
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "branchId": 1,
  "name": "Invalid Service",
  "price": -10.00,
  "description": "This should fail"
}

### Create Service with zero price
POST {{baseUrl}}/services
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "branchId": 1,
  "name": "Free Service",
  "price": 0.00,
  "description": "This should fail"
}

### Get non-existent Service
GET {{baseUrl}}/services/99999
Authorization: Bearer {{token}}

### Update non-existent Service
PUT {{baseUrl}}/services/99999
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "branchId": 1,
  "name": "Non-existent",
  "price": 50.00,
  "description": "This should fail"
}

### Delete non-existent Service
DELETE {{baseUrl}}/services/99999
Authorization: Bearer {{token}}